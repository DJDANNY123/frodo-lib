{
  "meta": {
    "exportDate": "2024-01-04T18:37:01.399Z",
    "exportTool": "frodo",
    "exportToolVersion": "v2.0.0-58 [v18.16.0]",
    "exportedBy": "sandeep.chaturvedi@forgerock.com",
    "origin": "https://openam-frodo-dev.forgeblocks.com/am",
    "originAmVersion": "7.5.0"
  },
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder"
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure"
            }
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0
                }
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
              ]
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {}
            }
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22"
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail"
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid"
                }
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper"
            },
            "autoFederation": {
              "autoFedEnabled": false
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI"
            },
            "url": {}
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"
                }
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"
                }
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"
                }
              ]
            }
          }
        }
      }
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>",
        "<EntityDescriptor entityID=\"iSPAzure\" xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:query=\"urn:oasis:names:tc:SAML:metadata:ext:query\" xmlns:mdattr=\"urn:oasis:names:tc:SAML:metadata:attribute\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\" xmlns:xenc11=\"http://www.w3.org/2009/xmlenc11#\" xmlns:alg=\"urn:oasis:names:tc:SAML:metadata:algsupport\" xmlns:x509qry=\"urn:oasis:names:tc:SAML:metadata:X509:query\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">",
        "    <SPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">",
        "        <KeyDescriptor use=\"signing\">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIZKO699rkpmYwDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzEyMDEwMDI2NThaFw0zMzExMjgwMDI2NThaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQC32R6yZEUoqnrQLnw3sKCYy5bxo3TdKdew7AvuxCYwVB3c2khauBqDD99Z",
        "+Dl3Q31vQ3vJ8ZVuXQauHowWT+C6aK/tEhGSeRWPdHzexWW/5OBXHtRJf99HdakUt8HToRquCoyL",
        "d+KrAvg2Cq/f4vb0dIJ3RDQ7BOgmpJ4Ym6Z5B3jAiRSWEP2ZW+RExpyTq8uIPjQGoYbqQSXC/td5",
        "27rAw0Pvlo3YTKrJNVWV+hgIUUPwfuF0ijunPTkseFW6ZH0VWnFswPIvzF5Y6iAjcaFj9aQDyejV",
        "AEWT8mpsPtetbPFWPfZlg4KVbx8tL/u7E27FfWRJr0yRPsXGHvZrUU5lAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBTY0biEminc++0WTPVXy7CqC+fdQDANBgkqhkiG9w0BAQsFAAOCAQEAG0cE49mQ46hmezGB",
        "2E24x+7Czwy9LQXB8vn9xyJEcVCudZ7aZzq3Y5NLjuP8y6rbhnd2v1pTpZHhEP4bfGUBnq2dacqY",
        "LVlQTmEit0p4NNHGNFKQi+96P07bftnVBIf0yN32KPka7nuRsmQNj9PvpnqVMU8Fqhyb26PKQJXA",
        "MVRC4ZYJZMbX/1gQ1YOCATwcHryZkoOFUOeJya9Ard4xmlyi6gX+D51x3zuQjiIql5Qe/MDOvN6v",
        "OdLzwiUdh6qt0NvUee+Fxq1R6afHgz+0M2CY74ZzcRYKHrVvySHFLBpfFJVTv6/KWK2Wsr/20FYt",
        "gKHO7RETEtknWIqelZ2uQg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use=\"encryption\">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDSzCCAjOgAwIBAgIIGacRljg0x5UwDQYJKoZIhvcNAQELBQAwVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDAeFw0yMzEyMDEwMDI3MDBaFw0zMzExMjgwMDI3MDBaMFQxCzAJBgNVBAYTAlVL",
        "MRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sx",
        "DTALBgNVBAMTBHRlc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3tiqY0i+wRCQk",
        "CPTsBvJOjoG5T9X3hKxhYwVSPMZ9MAjP95FOqNXzx+pG9gudjH3deAcqXWCzI8NkAHeG0RVASL1i",
        "Va47wsXn3zzydQFC19C1kOdyLOS69TJp329CkvLF0s14HHvzgMzlWd3tZ9MNbXmSNt8Nn1j+huvv",
        "Ef82c+R3SRZgaOVfTXFTTI7/ITRdybt6khE3nPEO1ad5SfqW0BZuhhh8PNxXMd8LFSjmyY07ThVR",
        "SapJWOx4O/gMbSDumhNzwhB4TD3OFWSRHQ5oX4eO6QzU3pGKz+sLSam6EwyjYboEBlSyFY1Tyld0",
        "CIi0NMOM/0cSsPqxUbwqo3DrAgMBAAGjITAfMB0GA1UdDgQWBBRjGMVgIxS05j+MceyZoMllwO9P",
        "jzANBgkqhkiG9w0BAQsFAAOCAQEAVFikGxSq+8dpg/QEEo0Q1k5tVNbK46cp6jao2nM8nAiXQrho",
        "PEei/H9qo7peubMTLKtkcSMtLII/f71AuuztdurlQLJxxii1qn+1vJSNo2QXLGPS6vgdPXDkoyFf",
        "TiSbfTejYrJAdodf7xXuA3A2hs0T32NIuOuo1DLIPKpRAIxk+0GrEMlEy62ZWUKjx8vuigDRnFqc",
        "Ov4G6GYydrTz9pv9UBTRUl4mnz3sGyspaKg3Ows4GbBGHgwGo87KzcSnwH91Jz7IalGBglL0+pYX",
        "fKi+4s5iLtznKxYoDI3+ZnriQ0VZP/r/sm+U9jRZ0ntw0HtAaZRHKQcMOOQ7XiVFcQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\">",
        "                <ds:DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#aes128-cbc\">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure\"/>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure\"/>",
        "        <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure\"/>",
        "        <ManageNameIDService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure\"/>",
        "        <ManageNameIDService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure\"/>",
        "        <ManageNameIDService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure\" ResponseLocation=\"https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure\"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index=\"0\" isDefault=\"true\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure\"/>",
        "        <AssertionConsumerService index=\"1\" isDefault=\"false\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure\"/>",
        "        <AssertionConsumerService index=\"2\" isDefault=\"false\" Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:PAOS\" Location=\"https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure\"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        ""
      ]
    },
    "remote": {}
  },
  "script": {
    "07ee6240-d106-4e25-a781-5fcabc477d22": {
      "_id": "07ee6240-d106-4e25-a781-5fcabc477d22",
      "context": "SAML2_SP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FrodoSPAdapter",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOnRequest",
        " *      - preSingleSignOnProcess",
        " *      - postSingleSignOnSuccess",
        " *      - postSingleSignOnFailure",
        " *      - postNewNameIDSuccess",
        " *      - postTerminateNameIDSuccess",
        " *      - preSingleLogoutProcess",
        " *      - postSingleLogoutSuccess",
        " *",
        " * Please see the JavaDoc for the interface for more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/org/forgerock/openam/saml2/plugins/SPAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpEntityId - String",
        " *     The entity ID for the Identity Provider for which the sign-on request will be sent.",
        " * request - HttpServletRequest (1)",
        " *     Servlet request object",
        " * response - HttpServletResponse (2)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (3)",
        " *     The authentication request sent that is sent from the Service Provider.",
        " * session - SSOToken (4)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * res - Response (5)",
        " *     The SSO Response received from the Identity Provider.",
        " * profile - String",
        " *     The protocol profile that is used, this will be one of the following values from SAML2Constants (6):",
        " *          - SAML2Constants.HTTP_POST",
        " *          - SAML2Constants.HTTP_ARTIFACT",
        " *          - SAML2Constants.PAOS",
        " * out - PrintWriter (7)",
        " *     The PrintWriter that can be used to write to.",
        " * isFederation - boolean",
        " *     Set to true if using federation, otherwise false.",
        " * failureCode - int",
        " *     An integer holding the failure code when an error has occurred. For potential values see SPAdapter.",
        " * userId - String",
        " *     The unique universal ID of the user with whom the new name identifier request was performed.",
        " * idRequest - ManageNameIDRequest (8)",
        " *     The new name identifier request, this will be null if the request object is not available",
        " * idResponse - ManageNameIDResponse (9)",
        " *     The new name identifier response, this will be null if the response object is not available",
        " * binding - String",
        " *     The binding used for the new name identifier request. This will be one of the following values:",
        " *          - SAML2Constants.SOAP",
        " *          - SAML2Constants.HTTP_REDIRECT",
        " * logoutRequest - LogoutRequest (10)",
        " *     The single logout request.",
        " * logoutResponse - LogoutResponse (11)",
        " *     The single logout response.",
        " * spAdapterScriptHelper - SpAdapterScriptHelper (12)",
        " *     An instance of SpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (13):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (2) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (3) AuthnRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/Response.html",
        " * (6) SAML2Constants - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/common/SAML2Constants.html",
        " * (7) PrintWriter - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/PrintWriter.html",
        " * (8) ManageNameIDRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/ManageNameIDRequest.html",
        " * (9) ManageNameIDResponse - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/ManageNameIDResponse.html",
        " * (10) LogoutRequest - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/LogoutRequest.html",
        " * (11) LogoutResponse - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/protocol/LogoutResponse.html",
        " * (12) SpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/plugins/scripted/SpAdapterScriptHelper.html.",
        " * (13) SAML2Exception - https://backstage.forgerock.com/docs/am/7.3/_attachments/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 SP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOnRequest:",
        " *     hostedEntityId",
        " *     idpEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     authnRequest",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function preSingleSignOnRequest() {",
        "}",
        "",
        "/*",
        " * Available variables for preSingleSignOnProcess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     authnRequest",
        " *     res",
        " *     profile",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function preSingleSignOnProcess() {",
        "}",
        "",
        "/*",
        " * Available variables for postSingleSignOnSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     out",
        " *     session",
        " *     authnRequest",
        " *     res",
        " *     profile",
        " *     isFederation",
        " *     spAdapterScriptHelper",
        " *     logger",
        " *",
        " * Return - true if response is being redirected, false if not. Default to false.",
        " */",
        "function postSingleSignOnSuccess() {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for postSingleSignOnFailure:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     authnRequest",
        " *     res",
        " *     profile",
        " *     failureCode",
        " *     spAdapterScriptHelper",
        " *     logger",
        " *",
        " * Return - true if response is being redirected, false if not. Default to false.",
        " */",
        "function postSingleSignOnFailure() {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for postNewNameIDSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     idRequest",
        " *     idResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function postNewNameIDSuccess() {",
        "}",
        "",
        "/*",
        " * Available variables for postTerminateNameIDSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     idRequest",
        " *     idResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function postTerminateNameIDSuccess() {",
        "}",
        "",
        "/*",
        " * Available variables for preSingleLogoutProcess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     logoutRequest",
        " *     logoutResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function preSingleLogoutProcess() {",
        "}",
        "",
        "/*",
        " * Available variables for postSingleLogoutSuccess:",
        " *     hostedEntityId",
        " *     realm",
        " *     request",
        " *     response",
        " *     userId",
        " *     logoutRequest",
        " *     logoutResponse",
        " *     binding",
        " *     spAdapterScriptHelper",
        " *     logger",
        " */",
        "function postSingleLogoutSuccess() {",
        "}"
      ]
    }
  }
}