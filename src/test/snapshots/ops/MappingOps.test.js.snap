// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MappingOps createMapping() 1: Should create sync mapping 1`] = `
{
  "_id": "sync/mapping3",
  "consentRequired": false,
  "displayName": "mapping3",
  "linkQualifiers": [],
  "name": "mapping3",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps createMapping() 2: Should create regular mapping 1`] = `
{
  "_id": "mapping/mapping4",
  "consentRequired": false,
  "displayName": "mapping4",
  "linkQualifiers": [],
  "name": "mapping4",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps createMappingExportTemplate() 1: Create Mapping Export Template 1`] = `
{
  "mapping": {},
  "meta": Any<Object>,
  "sync": {
    "id": "sync",
    "mappings": [],
  },
}
`;

exports[`MappingOps exportMapping() 1: Should export sync mapping 1`] = `
{
  "mapping": {},
  "meta": Any<Object>,
  "sync": {
    "id": "sync",
    "mappings": [
      {
        "_id": "sync/mapping1",
        "consentRequired": false,
        "displayName": "mapping1",
        "linkQualifiers": [],
        "name": "mapping1",
        "policies": [],
        "properties": [],
        "source": "system/connector1/bravo_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
          "managedBravo_user_managedAlpha_user",
          "AlphaUser2GoogleApps",
        ],
        "target": "system/connector1/bravo_user",
      },
    ],
  },
}
`;

exports[`MappingOps exportMapping() 2: Should export regular mapping 1`] = `
{
  "mapping": {
    "mapping/mapping2": {
      "_id": "mapping/mapping2",
      "consentRequired": false,
      "displayName": "mapping2",
      "linkQualifiers": [],
      "name": "mapping2",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
  },
  "meta": Any<Object>,
  "sync": {
    "id": "sync",
    "mappings": [],
  },
}
`;

exports[`MappingOps exportMappings() 1: Export mappings 1`] = `
{
  "mapping": {
    "mapping/managedAlpha_assignment_managedBravo_assignment": {
      "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
      "consentRequired": false,
      "displayName": "managedAlpha_assignment_managedBravo_assignment",
      "icon": null,
      "name": "managedAlpha_assignment_managedBravo_assignment",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/alpha_assignment",
      "target": "managed/bravo_assignment",
    },
    "mapping/managedBravo_group_managedBravo_group": {
      "_id": "mapping/managedBravo_group_managedBravo_group",
      "consentRequired": false,
      "displayName": "managedBravo_group_managedBravo_group",
      "icon": null,
      "name": "managedBravo_group_managedBravo_group",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_group",
      "target": "managed/bravo_group",
    },
    "mapping/managedBravo_user_managedBravo_user0": {
      "_id": "mapping/managedBravo_user_managedBravo_user0",
      "consentRequired": false,
      "displayName": "managedBravo_user_managedBravo_user0",
      "icon": null,
      "name": "managedBravo_user_managedBravo_user0",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [
        "managedAlpha_assignment_managedBravo_assignment",
      ],
      "target": "managed/bravo_user",
    },
    "mapping/mapping12": {
      "_id": "mapping/mapping12",
      "consentRequired": true,
      "displayName": "mapping12",
      "linkQualifiers": [],
      "name": "mapping12",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
    "mapping/mapping2": {
      "_id": "mapping/mapping2",
      "consentRequired": false,
      "displayName": "mapping2",
      "linkQualifiers": [],
      "name": "mapping2",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
    "mapping/mapping4": {
      "_id": "mapping/mapping4",
      "consentRequired": false,
      "displayName": "mapping4",
      "linkQualifiers": [],
      "name": "mapping4",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
  },
  "meta": Any<Object>,
  "sync": {
    "id": "sync",
    "mappings": [
      {
        "_id": "sync/managedBravo_user_managedBravo_user",
        "consentRequired": false,
        "displayName": "managedBravo_user_managedBravo_user",
        "icon": null,
        "name": "managedBravo_user_managedBravo_user",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT",
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE",
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS",
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED",
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY",
          },
          {
            "action": "ASYNC",
            "situation": "MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED",
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED",
          },
        ],
        "properties": [],
        "source": "managed/bravo_user",
        "syncAfter": [],
        "target": "managed/bravo_user",
      },
      {
        "_id": "sync/managedAlpha_application_managedBravo_application",
        "consentRequired": true,
        "displayName": "Test Application Mapping",
        "icon": null,
        "name": "managedAlpha_application_managedBravo_application",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT",
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE",
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS",
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED",
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY",
          },
          {
            "action": "ASYNC",
            "situation": "MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED",
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED",
          },
        ],
        "properties": [
          {
            "source": "authoritative",
            "target": "_id",
          },
        ],
        "source": "managed/alpha_application",
        "sourceQuery": {
          "_queryFilter": "(eq "" or eq "")",
        },
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
        ],
        "target": "managed/bravo_application",
        "targetQuery": {
          "_queryFilter": "!(eq "")",
        },
      },
      {
        "_id": "sync/managedAlpha_user_managedBravo_user",
        "consentRequired": true,
        "displayName": "Test Mapping for Frodo",
        "icon": null,
        "name": "managedAlpha_user_managedBravo_user",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT",
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE",
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS",
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED",
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY",
          },
          {
            "action": "ASYNC",
            "situation": "MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED",
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED",
          },
        ],
        "properties": [
          {
            "condition": {
              "globals": {},
              "source": "console.log("Hello World!");",
              "type": "text/javascript",
            },
            "default": [
              "Default value string",
            ],
            "source": "accountStatus",
            "target": "applications",
            "transform": {
              "globals": {},
              "source": "console.log("hello");",
              "type": "text/javascript",
            },
          },
        ],
        "source": "managed/alpha_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
        ],
        "target": "managed/bravo_user",
      },
      {
        "_id": "sync/managedBravo_user_managedAlpha_user",
        "consentRequired": false,
        "displayName": "Frodo test mapping",
        "icon": null,
        "name": "managedBravo_user_managedAlpha_user",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT",
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE",
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS",
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND",
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED",
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY",
          },
          {
            "action": "ASYNC",
            "situation": "MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING",
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED",
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED",
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED",
          },
        ],
        "properties": [],
        "source": "managed/bravo_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
        ],
        "target": "managed/alpha_user",
      },
      {
        "_id": "sync/AlphaUser2GoogleApps",
        "consentRequired": false,
        "correlationQuery": [
          {
            "expressionTree": {
              "all": [
                "__NAME__",
              ],
            },
            "file": "ui/correlateTreeToQueryFilter.js",
            "linkQualifier": "default",
            "mapping": "AlphaUser2GoogleApps",
            "type": "text/javascript",
          },
        ],
        "displayName": "AlphaUser2GoogleApps",
        "enableSync": {
          "$bool": "&{esv.gac.enable.mapping}",
        },
        "icon": null,
        "name": "AlphaUser2GoogleApps",
        "onCreate": {
          "globals": {},
          "source": "target.orgUnitPath = "/NewAccounts";",
          "type": "text/javascript",
        },
        "onUpdate": {
          "globals": {},
          "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
          "type": "text/javascript",
        },
        "policies": [
          {
            "action": "EXCEPTION",
            "situation": "AMBIGUOUS",
          },
          {
            "action": "UNLINK",
            "situation": "SOURCE_MISSING",
          },
          {
            "action": {
              "globals": {},
              "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
              "type": "text/javascript",
            },
            "situation": "MISSING",
          },
          {
            "action": "EXCEPTION",
            "situation": "FOUND_ALREADY_LINKED",
          },
          {
            "action": "IGNORE",
            "situation": "UNQUALIFIED",
          },
          {
            "action": "IGNORE",
            "situation": "UNASSIGNED",
          },
          {
            "action": "UNLINK",
            "situation": "LINK_ONLY",
          },
          {
            "action": "IGNORE",
            "situation": "TARGET_IGNORED",
          },
          {
            "action": "IGNORE",
            "situation": "SOURCE_IGNORED",
          },
          {
            "action": "IGNORE",
            "situation": "ALL_GONE",
          },
          {
            "action": "UPDATE",
            "situation": "CONFIRMED",
          },
          {
            "action": "LINK",
            "situation": "FOUND",
          },
          {
            "action": "CREATE",
            "situation": "ABSENT",
          },
        ],
        "properties": [
          {
            "condition": {
              "globals": {},
              "source": "object.custom_password_encrypted != null",
              "type": "text/javascript",
            },
            "source": "custom_password_encrypted",
            "target": "__PASSWORD__",
            "transform": {
              "globals": {},
              "source": "openidm.decrypt(source);",
              "type": "text/javascript",
            },
          },
          {
            "source": "cn",
            "target": "__NAME__",
            "transform": {
              "globals": {},
              "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
              "type": "text/javascript",
            },
          },
          {
            "source": "givenName",
            "target": "givenName",
          },
          {
            "source": "",
            "target": "familyName",
            "transform": {
              "globals": {},
              "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
              "type": "text/javascript",
            },
          },
        ],
        "queuedSync": {
          "enabled": true,
          "maxQueueSize": 20000,
          "maxRetries": 5,
          "pageSize": 100,
          "pollingInterval": 1000,
          "postRetryAction": "logged-ignore",
          "retryDelay": 1000,
        },
        "source": "managed/alpha_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
          "managedBravo_user_managedAlpha_user",
        ],
        "target": "system/GoogleApps/__ACCOUNT__",
        "validSource": {
          "globals": {},
          "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
          "type": "text/javascript",
        },
      },
      {
        "_id": "sync/mapping1",
        "consentRequired": false,
        "displayName": "mapping1",
        "linkQualifiers": [],
        "name": "mapping1",
        "policies": [],
        "properties": [],
        "source": "system/connector1/bravo_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
          "managedBravo_user_managedAlpha_user",
          "AlphaUser2GoogleApps",
        ],
        "target": "system/connector1/bravo_user",
      },
      {
        "_id": "sync/mapping11",
        "consentRequired": true,
        "displayName": "mapping11",
        "linkQualifiers": [],
        "name": "mapping11",
        "policies": [],
        "properties": [],
        "source": "managed/bravo_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
          "managedBravo_user_managedAlpha_user",
          "AlphaUser2GoogleApps",
          "mapping1",
        ],
        "target": "managed/bravo_user",
      },
      {
        "_id": "sync/mapping3",
        "consentRequired": false,
        "displayName": "mapping3",
        "linkQualifiers": [],
        "name": "mapping3",
        "policies": [],
        "properties": [],
        "source": "managed/bravo_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
          "managedBravo_user_managedAlpha_user",
          "AlphaUser2GoogleApps",
          "mapping1",
          "mapping11",
        ],
        "target": "managed/bravo_user",
      },
    ],
  },
}
`;

exports[`MappingOps importFirstMapping() 1: Should import first sync mapping 1`] = `
{
  "_id": "sync/mapping7",
  "consentRequired": false,
  "displayName": "mapping7",
  "linkQualifiers": [],
  "name": "mapping7",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps importFirstMapping() 2: Should import first regular mapping 1`] = `
{
  "_id": "mapping/mapping8",
  "consentRequired": false,
  "displayName": "mapping8",
  "linkQualifiers": [],
  "name": "mapping8",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps importMapping() 1: Should import sync mapping 1`] = `
{
  "_id": "sync/mapping5",
  "consentRequired": false,
  "displayName": "mapping5",
  "linkQualifiers": [],
  "name": "mapping5",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps importMapping() 2: Should import regular mapping 1`] = `
{
  "_id": "mapping/mapping6",
  "consentRequired": false,
  "displayName": "mapping6",
  "linkQualifiers": [],
  "name": "mapping6",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps importMappings() 1: Should import mappings 1`] = `
[
  {
    "_id": "mapping/mapping10",
    "consentRequired": false,
    "displayName": "mapping10",
    "linkQualifiers": [],
    "name": "mapping10",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "sync/mapping9",
    "consentRequired": false,
    "displayName": "mapping9",
    "linkQualifiers": [],
    "name": "mapping9",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
]
`;

exports[`MappingOps readMapping() 1: Should read sync mapping 1`] = `
{
  "_id": "sync/mapping1",
  "consentRequired": false,
  "displayName": "mapping1",
  "linkQualifiers": [],
  "name": "mapping1",
  "policies": [],
  "properties": [],
  "source": "system/connector1/bravo_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
    "managedAlpha_user_managedBravo_user",
    "managedBravo_user_managedAlpha_user",
    "AlphaUser2GoogleApps",
  ],
  "target": "system/connector1/bravo_user",
}
`;

exports[`MappingOps readMapping() 2: Should read regular mapping 1`] = `
{
  "_id": "mapping/mapping2",
  "consentRequired": false,
  "displayName": "mapping2",
  "linkQualifiers": [],
  "name": "mapping2",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps readMappings() 1: Read mappings 1`] = `
[
  {
    "_id": "sync/managedBravo_user_managedBravo_user",
    "consentRequired": false,
    "displayName": "managedBravo_user_managedBravo_user",
    "icon": null,
    "name": "managedBravo_user_managedBravo_user",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "sync/managedAlpha_application_managedBravo_application",
    "consentRequired": true,
    "displayName": "Test Application Mapping",
    "icon": null,
    "name": "managedAlpha_application_managedBravo_application",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [
      {
        "source": "authoritative",
        "target": "_id",
      },
    ],
    "source": "managed/alpha_application",
    "sourceQuery": {
      "_queryFilter": "(eq "" or eq "")",
    },
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
    ],
    "target": "managed/bravo_application",
    "targetQuery": {
      "_queryFilter": "!(eq "")",
    },
  },
  {
    "_id": "sync/managedAlpha_user_managedBravo_user",
    "consentRequired": true,
    "displayName": "Test Mapping for Frodo",
    "icon": null,
    "name": "managedAlpha_user_managedBravo_user",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [
      {
        "condition": {
          "globals": {},
          "source": "console.log("Hello World!");",
          "type": "text/javascript",
        },
        "default": [
          "Default value string",
        ],
        "source": "accountStatus",
        "target": "applications",
        "transform": {
          "globals": {},
          "source": "console.log("hello");",
          "type": "text/javascript",
        },
      },
    ],
    "source": "managed/alpha_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
    ],
    "target": "managed/bravo_user",
  },
  {
    "_id": "sync/managedBravo_user_managedAlpha_user",
    "consentRequired": false,
    "displayName": "Frodo test mapping",
    "icon": null,
    "name": "managedBravo_user_managedAlpha_user",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
    ],
    "target": "managed/alpha_user",
  },
  {
    "_id": "sync/AlphaUser2GoogleApps",
    "consentRequired": false,
    "correlationQuery": [
      {
        "expressionTree": {
          "all": [
            "__NAME__",
          ],
        },
        "file": "ui/correlateTreeToQueryFilter.js",
        "linkQualifier": "default",
        "mapping": "AlphaUser2GoogleApps",
        "type": "text/javascript",
      },
    ],
    "displayName": "AlphaUser2GoogleApps",
    "enableSync": {
      "$bool": "&{esv.gac.enable.mapping}",
    },
    "icon": null,
    "name": "AlphaUser2GoogleApps",
    "onCreate": {
      "globals": {},
      "source": "target.orgUnitPath = "/NewAccounts";",
      "type": "text/javascript",
    },
    "onUpdate": {
      "globals": {},
      "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
      "type": "text/javascript",
    },
    "policies": [
      {
        "action": "EXCEPTION",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "UNLINK",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": {
          "globals": {},
          "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
          "type": "text/javascript",
        },
        "situation": "MISSING",
      },
      {
        "action": "EXCEPTION",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "IGNORE",
        "situation": "UNQUALIFIED",
      },
      {
        "action": "IGNORE",
        "situation": "UNASSIGNED",
      },
      {
        "action": "UNLINK",
        "situation": "LINK_ONLY",
      },
      {
        "action": "IGNORE",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "IGNORE",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "IGNORE",
        "situation": "ALL_GONE",
      },
      {
        "action": "UPDATE",
        "situation": "CONFIRMED",
      },
      {
        "action": "LINK",
        "situation": "FOUND",
      },
      {
        "action": "CREATE",
        "situation": "ABSENT",
      },
    ],
    "properties": [
      {
        "condition": {
          "globals": {},
          "source": "object.custom_password_encrypted != null",
          "type": "text/javascript",
        },
        "source": "custom_password_encrypted",
        "target": "__PASSWORD__",
        "transform": {
          "globals": {},
          "source": "openidm.decrypt(source);",
          "type": "text/javascript",
        },
      },
      {
        "source": "cn",
        "target": "__NAME__",
        "transform": {
          "globals": {},
          "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
          "type": "text/javascript",
        },
      },
      {
        "source": "givenName",
        "target": "givenName",
      },
      {
        "source": "",
        "target": "familyName",
        "transform": {
          "globals": {},
          "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
          "type": "text/javascript",
        },
      },
    ],
    "queuedSync": {
      "enabled": true,
      "maxQueueSize": 20000,
      "maxRetries": 5,
      "pageSize": 100,
      "pollingInterval": 1000,
      "postRetryAction": "logged-ignore",
      "retryDelay": 1000,
    },
    "source": "managed/alpha_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
      "managedBravo_user_managedAlpha_user",
    ],
    "target": "system/GoogleApps/__ACCOUNT__",
    "validSource": {
      "globals": {},
      "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
      "type": "text/javascript",
    },
  },
  {
    "_id": "sync/mapping1",
    "consentRequired": false,
    "displayName": "mapping1",
    "linkQualifiers": [],
    "name": "mapping1",
    "policies": [],
    "properties": [],
    "source": "system/connector1/bravo_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
      "managedBravo_user_managedAlpha_user",
      "AlphaUser2GoogleApps",
    ],
    "target": "system/connector1/bravo_user",
  },
  {
    "_id": "sync/mapping11",
    "consentRequired": false,
    "displayName": "mapping11",
    "linkQualifiers": [],
    "name": "mapping11",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
      "managedBravo_user_managedAlpha_user",
      "AlphaUser2GoogleApps",
      "mapping1",
    ],
    "target": "managed/bravo_user",
  },
  {
    "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
    "consentRequired": false,
    "displayName": "managedAlpha_assignment_managedBravo_assignment",
    "icon": null,
    "name": "managedAlpha_assignment_managedBravo_assignment",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/alpha_assignment",
    "target": "managed/bravo_assignment",
  },
  {
    "_id": "mapping/managedBravo_group_managedBravo_group",
    "consentRequired": false,
    "displayName": "managedBravo_group_managedBravo_group",
    "icon": null,
    "name": "managedBravo_group_managedBravo_group",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_group",
    "target": "managed/bravo_group",
  },
  {
    "_id": "mapping/mapping12",
    "consentRequired": false,
    "displayName": "mapping12",
    "linkQualifiers": [],
    "name": "mapping12",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "mapping/mapping2",
    "consentRequired": false,
    "displayName": "mapping2",
    "linkQualifiers": [],
    "name": "mapping2",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "mapping/managedBravo_user_managedBravo_user0",
    "consentRequired": false,
    "displayName": "managedBravo_user_managedBravo_user0",
    "icon": null,
    "name": "managedBravo_user_managedBravo_user0",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [
      "managedAlpha_assignment_managedBravo_assignment",
    ],
    "target": "managed/bravo_user",
  },
]
`;

exports[`MappingOps readNewMappings() 1: Read new mappings 1`] = `
[
  {
    "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
    "consentRequired": false,
    "displayName": "managedAlpha_assignment_managedBravo_assignment",
    "icon": null,
    "name": "managedAlpha_assignment_managedBravo_assignment",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/alpha_assignment",
    "target": "managed/bravo_assignment",
  },
  {
    "_id": "mapping/managedBravo_group_managedBravo_group",
    "consentRequired": false,
    "displayName": "managedBravo_group_managedBravo_group",
    "icon": null,
    "name": "managedBravo_group_managedBravo_group",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_group",
    "target": "managed/bravo_group",
  },
  {
    "_id": "mapping/mapping12",
    "consentRequired": false,
    "displayName": "mapping12",
    "linkQualifiers": [],
    "name": "mapping12",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "mapping/mapping2",
    "consentRequired": false,
    "displayName": "mapping2",
    "linkQualifiers": [],
    "name": "mapping2",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "mapping/managedBravo_user_managedBravo_user0",
    "consentRequired": false,
    "displayName": "managedBravo_user_managedBravo_user0",
    "icon": null,
    "name": "managedBravo_user_managedBravo_user0",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [
      "managedAlpha_assignment_managedBravo_assignment",
    ],
    "target": "managed/bravo_user",
  },
]
`;

exports[`MappingOps readSyncMappings() 1: Read sync mappings 1`] = `
[
  {
    "_id": "sync/managedBravo_user_managedBravo_user",
    "consentRequired": false,
    "displayName": "managedBravo_user_managedBravo_user",
    "icon": null,
    "name": "managedBravo_user_managedBravo_user",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [],
    "target": "managed/bravo_user",
  },
  {
    "_id": "sync/managedAlpha_application_managedBravo_application",
    "consentRequired": true,
    "displayName": "Test Application Mapping",
    "icon": null,
    "name": "managedAlpha_application_managedBravo_application",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [
      {
        "source": "authoritative",
        "target": "_id",
      },
    ],
    "source": "managed/alpha_application",
    "sourceQuery": {
      "_queryFilter": "(eq "" or eq "")",
    },
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
    ],
    "target": "managed/bravo_application",
    "targetQuery": {
      "_queryFilter": "!(eq "")",
    },
  },
  {
    "_id": "sync/managedAlpha_user_managedBravo_user",
    "consentRequired": true,
    "displayName": "Test Mapping for Frodo",
    "icon": null,
    "name": "managedAlpha_user_managedBravo_user",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [
      {
        "condition": {
          "globals": {},
          "source": "console.log("Hello World!");",
          "type": "text/javascript",
        },
        "default": [
          "Default value string",
        ],
        "source": "accountStatus",
        "target": "applications",
        "transform": {
          "globals": {},
          "source": "console.log("hello");",
          "type": "text/javascript",
        },
      },
    ],
    "source": "managed/alpha_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
    ],
    "target": "managed/bravo_user",
  },
  {
    "_id": "sync/managedBravo_user_managedAlpha_user",
    "consentRequired": false,
    "displayName": "Frodo test mapping",
    "icon": null,
    "name": "managedBravo_user_managedAlpha_user",
    "policies": [
      {
        "action": "ASYNC",
        "situation": "ABSENT",
      },
      {
        "action": "ASYNC",
        "situation": "ALL_GONE",
      },
      {
        "action": "ASYNC",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "ASYNC",
        "situation": "CONFIRMED",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND",
      },
      {
        "action": "ASYNC",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "ASYNC",
        "situation": "LINK_ONLY",
      },
      {
        "action": "ASYNC",
        "situation": "MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": "ASYNC",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "ASYNC",
        "situation": "UNASSIGNED",
      },
      {
        "action": "ASYNC",
        "situation": "UNQUALIFIED",
      },
    ],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
    ],
    "target": "managed/alpha_user",
  },
  {
    "_id": "sync/AlphaUser2GoogleApps",
    "consentRequired": false,
    "correlationQuery": [
      {
        "expressionTree": {
          "all": [
            "__NAME__",
          ],
        },
        "file": "ui/correlateTreeToQueryFilter.js",
        "linkQualifier": "default",
        "mapping": "AlphaUser2GoogleApps",
        "type": "text/javascript",
      },
    ],
    "displayName": "AlphaUser2GoogleApps",
    "enableSync": {
      "$bool": "&{esv.gac.enable.mapping}",
    },
    "icon": null,
    "name": "AlphaUser2GoogleApps",
    "onCreate": {
      "globals": {},
      "source": "target.orgUnitPath = "/NewAccounts";",
      "type": "text/javascript",
    },
    "onUpdate": {
      "globals": {},
      "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
      "type": "text/javascript",
    },
    "policies": [
      {
        "action": "EXCEPTION",
        "situation": "AMBIGUOUS",
      },
      {
        "action": "UNLINK",
        "situation": "SOURCE_MISSING",
      },
      {
        "action": {
          "globals": {},
          "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
          "type": "text/javascript",
        },
        "situation": "MISSING",
      },
      {
        "action": "EXCEPTION",
        "situation": "FOUND_ALREADY_LINKED",
      },
      {
        "action": "IGNORE",
        "situation": "UNQUALIFIED",
      },
      {
        "action": "IGNORE",
        "situation": "UNASSIGNED",
      },
      {
        "action": "UNLINK",
        "situation": "LINK_ONLY",
      },
      {
        "action": "IGNORE",
        "situation": "TARGET_IGNORED",
      },
      {
        "action": "IGNORE",
        "situation": "SOURCE_IGNORED",
      },
      {
        "action": "IGNORE",
        "situation": "ALL_GONE",
      },
      {
        "action": "UPDATE",
        "situation": "CONFIRMED",
      },
      {
        "action": "LINK",
        "situation": "FOUND",
      },
      {
        "action": "CREATE",
        "situation": "ABSENT",
      },
    ],
    "properties": [
      {
        "condition": {
          "globals": {},
          "source": "object.custom_password_encrypted != null",
          "type": "text/javascript",
        },
        "source": "custom_password_encrypted",
        "target": "__PASSWORD__",
        "transform": {
          "globals": {},
          "source": "openidm.decrypt(source);",
          "type": "text/javascript",
        },
      },
      {
        "source": "cn",
        "target": "__NAME__",
        "transform": {
          "globals": {},
          "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
          "type": "text/javascript",
        },
      },
      {
        "source": "givenName",
        "target": "givenName",
      },
      {
        "source": "",
        "target": "familyName",
        "transform": {
          "globals": {},
          "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
          "type": "text/javascript",
        },
      },
    ],
    "queuedSync": {
      "enabled": true,
      "maxQueueSize": 20000,
      "maxRetries": 5,
      "pageSize": 100,
      "pollingInterval": 1000,
      "postRetryAction": "logged-ignore",
      "retryDelay": 1000,
    },
    "source": "managed/alpha_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
      "managedBravo_user_managedAlpha_user",
    ],
    "target": "system/GoogleApps/__ACCOUNT__",
    "validSource": {
      "globals": {},
      "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
      "type": "text/javascript",
    },
  },
  {
    "_id": "sync/mapping1",
    "consentRequired": false,
    "displayName": "mapping1",
    "linkQualifiers": [],
    "name": "mapping1",
    "policies": [],
    "properties": [],
    "source": "system/connector1/bravo_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
      "managedBravo_user_managedAlpha_user",
      "AlphaUser2GoogleApps",
    ],
    "target": "system/connector1/bravo_user",
  },
  {
    "_id": "sync/mapping11",
    "consentRequired": false,
    "displayName": "mapping11",
    "linkQualifiers": [],
    "name": "mapping11",
    "policies": [],
    "properties": [],
    "source": "managed/bravo_user",
    "syncAfter": [
      "managedBravo_user_managedBravo_user",
      "managedAlpha_application_managedBravo_application",
      "managedAlpha_user_managedBravo_user",
      "managedBravo_user_managedAlpha_user",
      "AlphaUser2GoogleApps",
      "mapping1",
    ],
    "target": "managed/bravo_user",
  },
]
`;

exports[`MappingOps updateMapping() 1: Should update sync mapping 1`] = `
{
  "_id": "sync/mapping11",
  "consentRequired": true,
  "displayName": "mapping11",
  "linkQualifiers": [],
  "name": "mapping11",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`MappingOps updateMapping() 2: Should update regular mapping 1`] = `
{
  "_id": "mapping/mapping12",
  "consentRequired": true,
  "displayName": "mapping12",
  "linkQualifiers": [],
  "name": "mapping12",
  "policies": [],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;
